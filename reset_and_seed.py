#!/usr/bin/env python3
"""
–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –ë–î –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import os
import sys

def reset_database():
    """–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üóëÔ∏è  –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("-" * 40)
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ë–î
    if os.path.exists("app.db"):
        os.remove("app.db")
        print("‚úÖ –°—Ç–∞—Ä–∞—è –ë–î —É–¥–∞–ª–µ–Ω–∞")
    else:
        print("‚ÑπÔ∏è  –§–∞–π–ª –ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ —Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    from app.core.database import create_tables
    create_tables()
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

def run_seeds():
    """–ó–∞–ø—É—Å–∫ —Å–∏–¥–æ–≤"""
    print("\nüå± –ó–ê–ü–£–°–ö –ù–ê–ß–ê–õ–¨–ù–´–• –î–ê–ù–ù–´–•")
    print("-" * 40)
    
    from app.migrations.seed_data import run_all_seeds
    run_all_seeds()
    print("‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

def verify_data():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–•")
    print("-" * 40)
    
    from app.core.database import SessionLocal
    from app.models.user import User
    from app.models.role import Role, Permission, UserRole
    
    db = SessionLocal()
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = db.query(User).all()
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        for user in users:
            print(f"   - {user.username} (ID: {user.id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏
        roles = db.query(Role).all()
        print(f"üé≠ –†–æ–ª–µ–π: {len(roles)}")
        for role in roles:
            print(f"   - {role.name} ({role.code})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        permissions = db.query(Permission).all()
        print(f"üîë –†–∞–∑—Ä–µ—à–µ–Ω–∏–π: {len(permissions)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-—Ä–æ–ª—å
        user_roles = db.query(UserRole).all()
        print(f"üîó –°–≤—è–∑–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-—Ä–æ–ª—å: {len(user_roles)}")
        for ur in user_roles:
            user = db.query(User).filter(User.id == ur.user_id).first()
            role = db.query(Role).filter(Role.id == ur.role_id).first()
            if user and role:
                print(f"   - {user.username} -> {role.name}")
        
    finally:
        db.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï –ò –ù–ê–°–¢–†–û–ô–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –ë–î
    reset_database()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–¥—ã
    run_seeds()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
    verify_data()
    
    print("\nüéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
    print("\nüîë –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï:")
    print("   Username: Admin")
    print("   Password: Admin123!")

if __name__ == "__main__":
    main()