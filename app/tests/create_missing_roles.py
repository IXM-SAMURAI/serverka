#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–æ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.core.database import SessionLocal
from app.models.role import Role

def create_missing_roles():
    """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ä–æ–ª–µ–π"""
    print("üé≠ –°–û–ó–î–ê–ù–ò–ï –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–• –†–û–õ–ï–ô")
    print("-" * 40)
    
    db = SessionLocal()
    try:
        # –†–æ–ª–∏ –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ
        required_roles = [
            {"name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "code": "admin", "description": "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º"},
            {"name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "code": "user", "description": "–û–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"},
            {"name": "–ì–æ—Å—Ç—å", "code": "guest", "description": "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø"}
        ]
        
        created_count = 0
        
        for role_data in required_roles:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ä–æ–ª—å
            existing_role = db.query(Role).filter(Role.code == role_data["code"]).first()
            
            if not existing_role:
                # –°–æ–∑–¥–∞–µ–º —Ä–æ–ª—å
                role = Role(
                    name=role_data["name"],
                    code=role_data["code"],
                    description=role_data["description"],
                    created_by=1  # –°–∏—Å—Ç–µ–º–∞
                )
                db.add(role)
                created_count += 1
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å: {role_data['name']} ({role_data['code']})")
            else:
                print(f"‚ÑπÔ∏è  –†–æ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {role_data['name']} ({role_data['code']})")
        
        db.commit()
        
        print(f"\nüìä –ò–¢–û–ì: –°–æ–∑–¥–∞–Ω–æ {created_count} –Ω–æ–≤—ã—Ö —Ä–æ–ª–µ–π")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ä–æ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ
        print("\nüé≠ –í–°–ï –†–û–õ–ò –í –°–ò–°–¢–ï–ú–ï:")
        all_roles = db.query(Role).all()
        for role in all_roles:
            print(f"   - {role.name} ({role.code}) - ID: {role.id}")
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–µ–π: {e}")
        db.rollback()
        return False
    finally:
        db.close()

def assign_admin_role_to_user():
    """–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é AdminUser"""
    print("\nüë§ –ù–ê–ó–ù–ê–ß–ï–ù–ò–ï –†–û–õ–ò –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
    print("-" * 40)
    
    db = SessionLocal()
    try:
        from app.models.user import User
        from app.models.role import UserRole
        
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = db.query(User).filter(User.username == "AdminUser").first()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å AdminUser –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ù–∞—Ö–æ–¥–∏–º —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_role = db.query(Role).filter(Role.code == "admin").first()
        if not admin_role:
            print("‚ùå –†–æ–ª—å 'admin' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username} (ID: {user.id})")
        print(f"üé≠ –†–æ–ª—å: {admin_role.name} (ID: {admin_role.id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –ª–∏ —É–∂–µ —Ä–æ–ª—å
        existing = db.query(UserRole).filter(
            UserRole.user_id == user.id,
            UserRole.role_id == admin_role.id
        ).first()
        
        if existing:
            print("‚úÖ –†–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞")
            return True
        
        # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å
        user_role = UserRole(
            user_id=user.id,
            role_id=admin_role.id,
            created_by=1  # –°–∏—Å—Ç–µ–º–∞
        )
        db.add(user_role)
        db.commit()
        
        print("‚úÖ –†–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–∏: {e}")
        db.rollback()
        return False
    finally:
        db.close()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–û–ó–î–ê–ù–ò–ï –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–• –†–û–õ–ï–ô")
    print("=" * 50)
    
    # 1. –°–æ–∑–¥–∞–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–æ–ª–∏
    if not create_missing_roles():
        return
    
    # 2. –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    assign_admin_role_to_user()
    
    print("\nüéâ –ü–†–û–ë–õ–ï–ú–ê –° –†–û–õ–Ø–ú–ò –†–ï–®–ï–ù–ê!")
    print("\n‚úÖ –ß–¢–û –ë–´–õ–û –ò–°–ü–†–ê–í–õ–ï–ù–û:")
    print("   - –°–æ–∑–¥–∞–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–æ–ª–∏ (admin, user, guest)")
    print("   - –ù–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å 'admin' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é AdminUser")
    print("\nüîë –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("   Username: AdminUser")
    print("   Password: Admin123!")
    print("\nüí° –í—Å—è –æ—Å—Ç–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Ä–∞–±–æ—á–µ–π")

if __name__ == "__main__":
    main()