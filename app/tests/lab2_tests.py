import requests
import json
import time

BASE_URL = "http://localhost:8000/api/auth"

class SimpleWorkingTester:
    def __init__(self):
        self.session = requests.Session()
        
    def print_test(self, name, success):
        status = "‚úÖ" if success else "‚ùå"
        print(f"{status} {name}")
        
    def test_basic_flow(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π –ø–æ—Ç–æ–∫: —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è -> –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"""
        print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞")
        print("=" * 40)
        
        # 1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        username = "Testuser"
        data = {
            "username": username,
            "email": "testuser@example.com", 
            "password": "Password123",
            "c_password": "Password123",
            "birthday": "2000-01-01"
        }
        
        response = self.session.post(f"{BASE_URL}/register", json=data)
        registration_ok = response.status_code == 201
        self.print_test("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", registration_ok)
        
        if not registration_ok:
            print(f"   –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
            return False
        
        # 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        login_data = {
            "username": username,
            "password": "Password123"
        }
        response = self.session.post(f"{BASE_URL}/login", json=login_data)
        login_ok = response.status_code == 200 and 'access_token' in response.json()
        self.print_test("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", login_ok)
        
        if login_ok:
            tokens = response.json()
            print(f"   –ü–æ–ª—É—á–µ–Ω access_token –∏ refresh_token")
        else:
            print(f"   –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
            
        # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        if login_ok:
            token = tokens['access_token']
            headers = {"Authorization": f"Bearer {token}"}
            response = self.session.get(f"{BASE_URL}/me", headers=headers)
            me_ok = response.status_code == 200
            self.print_test("–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", me_ok)
            
            if me_ok:
                user_info = response.json()
                print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info['username']}")
            else:
                print(f"   –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
        else:
            me_ok = False
            self.print_test("–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", False)
        
        # 4. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
        wrong_login_data = {
            "username": username,
            "password": "WrongPassword123"
        }
        response = self.session.post(f"{BASE_URL}/login", json=wrong_login_data)
        wrong_pass_ok = response.status_code in [401, 422]
        self.print_test("–ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è", wrong_pass_ok)
        
        return registration_ok and login_ok and me_ok and wrong_pass_ok

    def test_validations(self):
        """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
        print("\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–π")
        print("=" * 40)
        
        # 1. –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞
        data = {
            "username": "Younguser",
            "email": "young@test.ru",
            "password": "Password123",
            "c_password": "Password123",
            "birthday": "2020-01-01"  # –ú–µ–Ω—å—à–µ 14 –ª–µ—Ç
        }
        response = self.session.post(f"{BASE_URL}/register", json=data)
        age_ok = response.status_code == 422 and "–í–æ–∑—Ä–∞—Å—Ç" in response.text
        self.print_test("–í–∞–ª–∏–¥–∞—Ü–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞", age_ok)
        
        # 2. –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è
        data = {
            "username": "Badpassuser", 
            "email": "badpass@test.ru",
            "password": "password",  # –°–ª–∞–±—ã–π –ø–∞—Ä–æ–ª—å
            "c_password": "password",
            "birthday": "2000-01-01"
        }
        response = self.session.post(f"{BASE_URL}/register", json=data)
        pass_ok = response.status_code == 422
        self.print_test("–í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è", pass_ok)
        
        return age_ok and pass_ok

    def run_tests(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
        basic_ok = self.test_basic_flow()
        validations_ok = self.test_validations()
        
        print("\n" + "=" * 40)
        if basic_ok and validations_ok:
            print("üéâ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
            print("‚úÖ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ö†Ô∏è  –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print("üíØ –ì–æ—Ç–æ–≤–æ –∫ –∑–∞—â–∏—Ç–µ")
        
        return basic_ok

if __name__ == "__main__":
    tester = SimpleWorkingTester()
    tester.run_tests()