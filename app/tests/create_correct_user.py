#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ API
"""

import requests
import json

BASE_URL = "http://localhost:8000"

def create_proper_admin():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print("üë§ –°–û–ó–î–ê–ù–ò–ï –ü–†–ê–í–ò–õ–¨–ù–û–ì–û –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
    print("-" * 50)
    
    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–ø—Ä–æ—Ö–æ–¥—è—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é)
    user_data = {
        "username": "AdminUser",      # 8 —Å–∏–º–≤–æ–ª–æ–≤
        "email": "adminuser@example.com",
        "password": "Admin123!",      # 8+ —Å–∏–º–≤–æ–ª–æ–≤, —Ü–∏—Ñ—Ä—ã, –±—É–∫–≤—ã —Ä–∞–∑–Ω–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
        "c_password": "Admin123!",
        "birthday": "2000-01-01"      # –í–æ–∑—Ä–∞—Å—Ç > 14 –ª–µ—Ç
    }
    
    print("üì§ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    response = requests.post(
        f"{BASE_URL}/auth/register",
        json=user_data
    )
    
    if response.status_code == 201:
        user = response.json()
        print("‚úÖ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –°–û–ó–î–ê–ù!")
        print(f"   ID: {user['id']}")
        print(f"   Username: {user['username']}")
        print(f"   Email: {user['email']}")
        return user
    else:
        print(f"‚ùå –û–®–ò–ë–ö–ê –°–û–ó–î–ê–ù–ò–Ø: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        return None

def test_login(username, password):
    """–¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    print(f"\nüîê –¢–ï–°–¢ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò: {username}")
    
    login_data = {
        "username": username,
        "password": password
    }
    
    response = requests.post(
        f"{BASE_URL}/auth/login",
        json=login_data
    )
    
    if response.status_code == 200:
        tokens = response.json()
        print("‚úÖ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!")
        print(f"   Access Token: {tokens['access_token'][:30]}...")
        return tokens
    else:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {response.status_code}")
        print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        return None

def test_protected_endpoints(access_token):
    """–¢–µ—Å—Ç –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
    print("\nüîí –¢–ï–°–¢ –ó–ê–©–ò–©–ï–ù–ù–´–• –≠–ù–î–ü–û–ò–ù–¢–û–í")
    print("-" * 40)
    
    headers = {"Authorization": f"Bearer {access_token}"}
    
    endpoints = [
        ("/auth/me", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"),
        ("/api/ref/policy/role/", "–°–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π"),
        ("/api/ref/policy/permission/", "–°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π"),
        ("/api/ref/user/2/role", "–†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID: 2)"),
    ]
    
    for endpoint, description in endpoints:
        print(f"\nüì° {description}")
        response = requests.get(f"{BASE_URL}{endpoint}", headers=headers)
        
        if response.status_code == 200:
            data = response.json()
            if isinstance(data, list):
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ! –ó–∞–ø–∏—Å–µ–π: {len(data)}")
            else:
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ!")
                if 'username' in data:
                    print(f"     üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {data['username']}")
        elif response.status_code == 403:
            print(f"   üîí –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        elif response.status_code == 401:
            print(f"   üîê –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ {response.status_code}")

def test_role_creation(access_token):
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏"""
    print("\nüõ†Ô∏è –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –†–û–õ–ò")
    print("-" * 40)
    
    headers = {"Authorization": f"Bearer {access_token}"}
    
    role_data = {
        "name": "TestManager",
        "code": "test_manager",
        "description": "Test manager role"
    }
    
    response = requests.post(
        f"{BASE_URL}/api/ref/policy/role/",
        headers=headers,
        json=role_data
    )
    
    if response.status_code == 200:
        role = response.json()
        print("‚úÖ –†–û–õ–¨ –°–û–ó–î–ê–ù–ê –£–°–ü–ï–®–ù–û!")
        print(f"   Name: {role['name']}")
        print(f"   Code: {role['code']}")
        print(f"   ID: {role['id']}")
    elif response.status_code == 403:
        error_detail = response.json().get('detail', 'No detail')
        print(f"üîí –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–ï–ù: {error_detail}")
    else:
        print(f"‚ùå –û–®–ò–ë–ö–ê {response.status_code}: {response.text}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –°–û–ó–î–ê–ù–ò–ï –†–ê–ë–û–ß–ï–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = create_proper_admin()
    if not user:
        print("\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é:")
        print("   http://localhost:8000/docs")
        print("   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ:")
        print('   {"username": "AdminUser", "email": "admin@test.com", "password": "Admin123!", "c_password": "Admin123!", "birthday": "2000-01-01"}')
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    tokens = test_login("AdminUser", "Admin123!")
    if not tokens:
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    test_protected_endpoints(tokens['access_token'])
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏
    test_role_creation(tokens['access_token'])
    
    print("\nüéâ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")
    print("\nüîë –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï:")
    print("   Username: AdminUser")
    print("   Password: Admin123!")

if __name__ == "__main__":
    main()